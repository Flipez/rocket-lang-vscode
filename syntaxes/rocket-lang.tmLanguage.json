{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "RocketLang",
	"patterns": [
		{ "include": "#assignment"},
		{ "include": "#block" },
		{ "include": "#constant" },
		{ "include": "#function" },
		{ "include": "#keywords" },
		{ "include": "#library" },
		{ "include": "#punctuation" },
		{ "include": "#strings" }
	],
	"repository": {
		"assignment": {
			"name": "keyword.operator.assignment.rocket-lang",
			"match": "(=)"
		},
		"block": {
			"begin": "{",
			"beginCaptures": {
				"0": {
					"name": "puncuation.section.block.begin.rocket-lang"
				}
			},
			"end": "}",
			"endCaptures": {
				"0": {
					"name": "puncuation.section.block.end.rocket-lang"
				}
			}
		},
		"constant": {
			"patterns": [
				{
					"name": "constant.language.boolean.rocket-lang",
					"match": "\\b(true|false)\\b"
				},
				{
					"name": "constant.numeric.rocket-lang",
					"match": "\\b(0x[0-9a-fA-F]*|[0-9]+(\\.?[0-9]*)?(e(\\+|-)?[0-9]+)?)\\b"
				}
			]
		},
		"function": {
			"patterns": [
				{
					"name": "keyword.control.rocket-lang",
					"match": "\\b(?:def)\\b"
				},
				{
					"name": "meta.function.rocket-lang",
					"match": "(?:[.]|\\b)(\\w+)\\(",
					"captures": {
						"1": { "name": "entity.name.function.rocket-lang" }
					}
				},
				{
					"begin": "^(\\def\\b)\\s(\\w+)",
					"beginCaptures": {
						"1": {
							"name": "keyword.function.rocket-lang"
						},
						"2": {
							"name": "entity.name.function.rocket-lang"
						}
					},
					"end": "\\{"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keywords.control.rocket-lang",
					"match": "\\b(?:end|else|foreach|if|import|in|return|while)\\b"
				},
				{
					"name": "keywords.operator.arithmetic.rocket-lang",
					"match": "(\\-|\\+|\\*|\/|%)"
				},
				{
					"name": "keywords.operator.comparison.rocket-lang",
					"match": "(==|!=|<=|>=|<|>)"
				},
				{
					"name": "keywords.operator.assignment.rocket-lang",
					"match": "(=)"
				}
			]
		},
		"library": {
			"patterns": [
				{
					"name": "support.function.rocket-lang",
					"match": "\\b(puts|HTTP|open)\\b"
				}
			]
		},
		"puncutation": {
			"patterns": [
				{
					"name": "puncuation.other.comma.rocket-lang",
					"match": ","
				},
				{
					"name": "puncuation.other.period.rocket-lang",
					"match": "\\.(?!\\.)"
				},
				{
					"name": "punctuation.other.colon.rocket-lang",
					"match": ":(?!=)"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.rocket-lang",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.rocket-lang",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.rocket-lang"
}